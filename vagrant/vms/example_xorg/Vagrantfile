# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what you're doing.
Vagrant.configure("2") do |config|
  variables = {
    "LUSER" => "sergey",
    "DOMAIN" => "pisarenko.net",
    "FULL_NAME" => "Sergey Pisarenko",
    "AS" => "/usr/bin/sudo -u sergey"
  }

  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "arch-base-2021-05-01"

  config.vm.hostname = "xorgbox.xama"

  config.vm.define "example_xorg"

  config.vm.synced_folder '/vm_shared', "/shared"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  config.vm.network "public_network", :bridge => 'eth0', :mac => "DEADBEEF0002"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    vb.name = "ArchLinux X Example 21.05"

    # Display the VirtualBox GUI when booting the machine
    vb.gui = false
 
    vb.memory = "4096"
    vb.customize ["modifyvm", :id, "--cpus", "2"]

    # EFI boot
    vb.customize ["modifyvm", :id, "--firmware", "efi64"]

    # disable audio
    vb.customize ["modifyvm", :id, "--audio", "none"]

    # better video
    vb.customize ["modifyvm", :id, "--graphicscontroller", "vmsvga"]
    #vb.customize ["modifyvm", :id, "--accelerate3d", "on"]
    vb.customize ["modifyvm", :id, "--vram", "128"]

    # integration with desktop
    vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
    #vb.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]


    # full USB3
    # vb.customize ["modifyvm", :id, "--usb", "on"]
    # vb.customize ["modifyvm", :id, "--usbehci", "on"]
    # vb.customize ["modifyvm", :id, "--usbxhci", "on"]

    # RDP 
    vb.customize ["modifyvm", :id, "--vrdeaddress", "0.0.0.0"]
    vb.customize ["modifyvm", :id, "--vrdeport", "5943"]
  end

  config.vm.provision "file", source: "configs", destination: "/tmp/configs"

  config.vm.provision "file", source: "../../../common/configs", destination: "/tmp/configs"

  config.vm.provision "shell", path: "../../../common/layers/500-install_cli.sh", env: variables
  
  config.vm.provision "shell", path: "../../../common/layers/550-install_vm_tools.sh", env: variables

  config.vm.provision "shell", path: "../../../common/layers/800-install_xorg.sh", env: variables

  config.vm.provision "shell", path: "../../../common/layers/850-install_vm_xorg_tools.sh", env: variables
end
